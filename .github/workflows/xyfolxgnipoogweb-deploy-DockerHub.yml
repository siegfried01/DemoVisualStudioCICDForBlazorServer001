name: Build and deploy .NET Core app to Linux WebApp xyfolxgnipoogweb

on:
  push:
    branches:
    - main
env:
  AZURE_WEBAPP_NAME: xyfolxgnipoogweb
  AZURE_WEBAPP_PACKAGE_PATH: ./publish
  AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.xyfolxgnipoogweb_7074 }}
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: ./DemoVisualStudioCICDForBlazorServer
jobs:
  build-container:
    name: Build and push Docker container image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      name: Checkout code
    - name: Where are we
      run: |
        echo "We are in $PWD"
        ls -al
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}    
# https://blog.johnnyreilly.com/2021/12/27/azure-container-apps-build-and-deploy-with-bicep-and-github-actions   
    - uses: docker/build-push-action@v2    
      name: Build Docker container image
      with:
        context: ./DemoVisualStudioCICDForBlazorServer
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/demovisualstudiocicdforblazorserver:latest
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Deploy bicep template
      run: |
         az deployment group create --name DemoVisualStudioCICDForBlazorServer --resource-group rg_DemoVisualStudioCICDForBlazorServer   --template-file deploy-DemoVisualStudioCICDForBlazorServer.bicep --parameters '@deploy.parameters.json'
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
