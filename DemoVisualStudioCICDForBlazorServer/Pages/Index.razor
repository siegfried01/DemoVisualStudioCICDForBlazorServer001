@page "/"
@using static System.Console
@using MatBlazor
@using Microsoft.Extensions.Logging;
@inject ILogger<Index> logger
@inject IJSRuntime JsRuntime

<PageTitle>Index</PageTitle>

<h1>Hello, world! @DateTime.Now.ToString("ddddd MMMM dd yyyy hh:mm:ss.ffff tt (zzz)")</h1>
<MatButton>Hello Mat Design</MatButton>

Welcome to your new app deployed from Github Workflow Actions. Now deploying via DockerHub!
<button @onclick="ShowConfirm">Demo Javascript</button>

<SurveyPrompt Title="How is Blazor working for you?" />
<button @onclick="makeStdOutLogEntry">
    Press me to make a log entry!
</button>
<div style="border:groove">
    count = @count
</div>
@code {
    int count = 0;
    async Task makeStdOutLogEntry()
    { // https://www.c-sharpcorner.com/article/introduction-to-logging-framework-in-blazor-with-net-core/
        count++;
        var now = DateTime.Now.ToString("ddddd MMMM dd yyyy hh:mm:ss.ffff tt (zzz)");
        Console.WriteLine("Button press " + now);
        logger.LogDebug("Debug Logger: Button press " + now);
        logger.LogInformation("Info Logger: Button press " + now);
        logger.LogTrace("Trace Logger: Button press " + now);
        logger.LogWarning("Warning Logger: Button press " + now);
    }


    private async Task ShowConfirm()
    {
        var messageParams = new
        {
            title = "Are you sure?",
            text = $"Do you want to remove the pizza from your order?",
            icon = "warning",
            buttons = new
            {
                abort = new
                {
                    text = "Leave it in my order",
                    value = false
                },
                confirm = new
                {
                    text = "Remove pizza",
                    value = true
                }
            },
            dangerMode = true
        };

        if (await JsRuntime.InvokeAsync<bool>("swal", messageParams))
        {
            var now = DateTime.Now.ToString("ddddd MMMM dd yyyy hh:mm:ss.ffff tt (zzz)");
            logger.LogDebug("Debug Logger: Button press " + now);
        }
    }


}
